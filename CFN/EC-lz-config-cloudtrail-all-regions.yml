AWSTemplateFormatVersion: 2010-09-09

#   --------------------------------------------------------
#   Version History
#
#   
#   v1.0.0  J. Vandenbergen   Initial Version
#   v1.0.1  J. Vandenbergen   Added description and disabled notifications for all changes
#   v1.0.2  J. Vandenbergen   Added configuration for local SNS topics
#   v1.0.3  L. Leonard        Notification allowed from several organizations
#   v1.1.0  J. Silva          Enables optional resource installation (SOC integration)
#   --------------------------------------------------------

Description: >-
  v1.2. Enables CloudTrail and Config logging to S3 buckets in the logging account

  Prerequisites: 
    - SecLogMaster account exists with central S3-buckets for cloudtrail and config


  Execution:
    - Run in all accounts part of the project

  Creates in all accounts:
    - Cloudtrail: is multiRegion and logs to cloudwatchlogs and S3 in central account
    - Config: config recoderd created, snapshots to central account every 6h and alerts for config rules created
    - SNS: EC-Landing-Zone-Security-Notification topic created if executed in SecLog account
    - ParameterStore: Master AccountId and SNS topic stored in parameter store

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "S3 Buckets"
        Parameters:
          - CloudTrailBucket
          - ConfigBucket

Parameters:
  SecLogMasterAccountId:
    Type: String
    Description: Seclog master account ID

  SecLogMasterAccountRegion:
    Description: 'SecLogMaster account Region'
    Type: AWS::SSM::Parameter::Value<String>
    Default: "eu-west-1"
  CloudtrailKMSarn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: arn for KMS key to encrypt cloudtrail
    Default: "/org/member/KMSCloudtrailKey_arn"

  EnableSecLogForCloudTrailParam:
    Type: String
    Description: "Enable SecLog integration for CloudTrail?"
    Default: true
    AllowedValues:
    - true
    - false
  
  CloudWatchLogsGroupName:
    Type: String
    Default: '/aws/cloudtrail'
    Description: CloudWatchLogs Group name.
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain CloudTrail log events in the CloudWatch Logs.'
    Type: Number
    Default: 90
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  FirehoseDestinationArn:
    Type: String
    Default: ""
    Description: The ARN of the firehose stream aggregating the logs in the DIGIT C2 Log Aggregation Central Account
  DeliveryChannelName:
    Type: String
    Default: ""
    Description: The name of the delivery channel.
#  AccountIdList:
#    Type: AWS::SSM::Parameter::Value<CommaDelimitedList>
#    Default: /org/member/ClientAccountIds
#    Description: "List of client account IDs"

Conditions:

  IsSecLogMasterAccount: !Equals
    - !Ref AWS::AccountId
    - !Ref SecLogMasterAccountId
  IsNotSecLogMasterAccount: !Not 
    - !Equals 
      - !Ref AWS::AccountId
      - !Ref SecLogMasterAccountId
  EnableSecLogForCloudTrail: !Equals
  - !Ref EnableSecLogForCloudTrailParam
  - 'true'

  IsSecLogMasterAccountWithSOCIntegration: !And
  - !Equals
    - !Ref AWS::AccountId
    - !Ref SecLogMasterAccountId
  - !Equals
    - !Ref EnableSecLogForCloudTrailParam
    - 'true'
Mappings: {}

Resources:

  #   -------------------
  #   Enable CloudTrail
  #   -------------------
  
  CloudTrailLogging:
    Type: "AWS::CloudTrail::Trail"
    Properties:
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      TrailName: 'lz-cloudtrail-logging'
      S3BucketName: !Sub "cloudtrail-logs-${SecLogMasterAccountId}-do-not-delete"
      KMSKeyId: !Ref CloudtrailKMSarn
      IsLogging: true
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !GetAtt TrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt TrailLogGroupRole.Arn
  TrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref CloudWatchLogsGroupName
      RetentionInDays: !Ref LogsRetentionInDays
  TrailSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsSecLogMasterAccountWithSOCIntegration
    Properties:
      DestinationArn: !Ref 'FirehoseDestinationArn'
      FilterPattern: ''
      LogGroupName: !Ref 'TrailLogGroup'
  TrailLogGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AssumeRole1
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: CIS-cloudtrail-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: AWSCloudTrailCreateLogStream
            Effect: Allow
            Action: logs:CreateLogStream
            Resource: !GetAtt TrailLogGroup.Arn
          - Sid: AWSCloudTrailPutLogEvents
            Effect: Allow
            Action: logs:PutLogEvents
            Resource: !GetAtt TrailLogGroup.Arn


Outputs: {}
