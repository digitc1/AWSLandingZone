AWSTemplateFormatVersion: 2010-09-09

#   --------------------------------------------------------
#   Version History
#
#   v1.0.0    J. Vandenbergen   Initial Version
#   v1.1.0    J. Silva          Added SSL Secure Transport Only policy on all buckets
#   v1.1.5    J. Silva          Defines two lambda functions to push logs created by the linked accounts
#   v1.2.0    J. Silva          Lambda extraction to dedicated CFT
#   --------------------------------------------------------

Description: >-
    Creates S3 buckets for CloudTrail, Config and Access Logs.
    Enables versioning for CloudTrail and Config buckets.
    CloudTrail and Config Buckets push access logs to Access Logs Bucket.
    Script to be run in the SecLog-Master account
    StackName should contain EC-Customer

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Tags"
        Parameters:
          - lambdaStack

Parameters:  
  lambdaStack:
      Description: "Stack that deploys the lambdas for log shipping"
      Type: String
      Default: 'SECLZ-LogShipper-Lambdas'

  FilesRetentionInDays:
      Description: 'Specifies the number of days you want to retain log files in the SLZ S3 buckets.'
      Type: Number
      Default: 60
      AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  
  
  CloudtrailKMSarn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: arn for KMS key to encrypt cloudtrail
    Default: "/org/member/KMSCloudtrailKey_arn"

Mappings: {}


Resources:
  #   -------------------
  #   CloudTrail Bucket
  #   -------------------

  CloudTrailBucket:
      Type: AWS::S3::Bucket
      Properties:
          BucketEncryption: 
            ServerSideEncryptionConfiguration: 
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: 'aws:kms'
                KMSMasterKeyID: !Ref CloudtrailKMSarn
          BucketName:
              Fn::Join:
              - ""
              - - "cloudtrail-logs-"
                - Ref: AWS::AccountId
                - "-do-not-delete"
          NotificationConfiguration:
            LambdaConfigurations:
              - Event: s3:ObjectCreated:*
                Function: 
                  Fn::ImportValue: 
                    !Sub "${lambdaStack}-CloudTrailFunctionArn"
          OwnershipControls:
            Rules:
            - ObjectOwnership: BucketOwnerEnforced
          LifecycleConfiguration:
              Rules:
                -
                  Status: Enabled
                  ExpirationInDays: !Ref FilesRetentionInDays
                  NoncurrentVersionExpirationInDays: !Ref FilesRetentionInDays
                  Transitions:
                  # -
                  #    TransitionInDays: 60
                  #    StorageClass: GLACIER
                    -
                      TransitionInDays: 30
                      StorageClass: STANDARD_IA

                  NoncurrentVersionTransitions:
                  # -
                  #    TransitionInDays: 60
                  #    StorageClass: GLACIER
                    -
                      TransitionInDays: 30
                      StorageClass: STANDARD_IA

          LoggingConfiguration:
              DestinationBucketName: !Ref AccessLogsBucket
          VersioningConfiguration:
              Status: Enabled

  CloudTrailBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
          Bucket:
              Ref: CloudTrailBucket
          PolicyDocument:
              Statement:
                -
                  Sid: "CloudTrailBucketPolicyDelivery1"
                  Effect: "Allow"
                  Principal:
                    Service:
                    - "cloudtrail.amazonaws.com"
                  Action:
                  - "s3:GetBucketAcl"
                  Resource: !GetAtt CloudTrailBucket.Arn

                -
                  Sid: "CloudTrailBucketPolicyDelivery2"
                  Effect: "Allow"
                  Principal:
                    Service:
                    - "cloudtrail.amazonaws.com"
                  Action:
                  - "s3:PutObject"
                  Resource:
                    Fn::Join:
                      - ""
                      -
                        - !GetAtt CloudTrailBucket.Arn
                        - "/*"
                  Condition:
                    StringEquals:
                      "s3:x-amz-acl": "bucket-owner-full-control"
                -
                  Sid: "AWSCloudTrailgBucketSSL"
                  Action: s3:*
                  Principal: "*"
                  Effect: Deny
                  Resource:
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt CloudTrailBucket.Arn
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt CloudTrailBucket.Arn
                        - "/*"
                  Condition:
                    Bool:
                      "aws:SecureTransport": "false"

  #   -------------------
  #   Config Bucket
  #   -------------------

  ConfigBucket:
      Type: AWS::S3::Bucket
      Properties:
          BucketEncryption: 
            ServerSideEncryptionConfiguration: 
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
          BucketName:
              Fn::Join:
              - ""
              - - "config-logs-"
                - Ref: AWS::AccountId
                - "-do-not-delete"
          NotificationConfiguration:
            LambdaConfigurations:
              - Event: s3:ObjectCreated:*
                Function: 
                  Fn::ImportValue: 
                    !Sub "${lambdaStack}-ConfigFunctionArn"
          LifecycleConfiguration:
              Rules:
                -
                  Status: Enabled
                  ExpirationInDays: !Ref FilesRetentionInDays
                  NoncurrentVersionExpirationInDays: !Ref FilesRetentionInDays
                  Transitions:
                  # -
                  #    TransitionInDays: 60
                  #    StorageClass: GLACIER
                    -
                      TransitionInDays: 30
                      StorageClass: STANDARD_IA

                  NoncurrentVersionTransitions:
                  # -
                  #    TransitionInDays: 60
                  #    StorageClass: GLACIER
                    -
                      TransitionInDays: 30
                      StorageClass: STANDARD_IA
          LoggingConfiguration:
              DestinationBucketName: !Ref AccessLogsBucket
          VersioningConfiguration:
              Status: Enabled
          OwnershipControls:
            Rules:
            - ObjectOwnership: BucketOwnerEnforced

  ConfigBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
          Bucket:
              Ref: ConfigBucket
          PolicyDocument:
              Statement:
                -
                  Sid: "AWSConfigBucketPermissionsCheck"
                  Effect: "Allow"
                  Principal:
                    Service:
                    - "config.amazonaws.com"
                  Action:
                  - "s3:GetBucketAcl"
                  Resource: !GetAtt ConfigBucket.Arn

                -
                  Sid: "AWSConfigBucketDelivery"
                  Effect: "Allow"
                  Principal:
                    Service:
                    - "config.amazonaws.com"
                  Action:
                  - "s3:PutObject"
                  Resource:
                    Fn::Join:
                      - ""
                      -
                        - !GetAtt ConfigBucket.Arn
                        - "/*"
                  Condition:
                    StringEquals:
                      "s3:x-amz-acl": "bucket-owner-full-control"
                -
                  Sid: "AWSConfigBucketSSL"
                  Action: "s3:*"
                  Principal: "*"
                  Effect: Deny
                  Resource:
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt ConfigBucket.Arn
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt ConfigBucket.Arn
                        - "/*"
                  Condition:
                    Bool:
                      "aws:SecureTransport": "false"

  #   -------------------
  #   AccessLogs Bucket
  #   -------------------

  AccessLogsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketEncryption: 
          ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
        BucketName:
          Fn::Join:
          - ""
          - - "access-logs-"
            - Ref: AWS::AccountId
            - "-do-not-delete"
        OwnershipControls:
          Rules:
          - ObjectOwnership: BucketOwnerEnforced
        LifecycleConfiguration:
            Rules:
              -
                Status: Enabled
                ExpirationInDays: !Ref FilesRetentionInDays
                NoncurrentVersionExpirationInDays: !Ref FilesRetentionInDays

  AccessLogsPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
          Bucket:
              Ref: AccessLogsBucket
          PolicyDocument:
              Statement:
                -
                  Sid: "AWSAccessLogsBucketSSL"
                  Action: "s3:*"
                  Effect: Deny
                  Principal: "*"
                  Resource:
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                        - "/*"
                  Condition:
                    Bool:
                      "aws:SecureTransport": "false"
                -
                  Sid: "S3ServerAccessLogsPolicy"
                  Action: "s3:PutObject"
                  Effect: Allow
                  Principal: "logging.s3.amazonaws.com"
                  Resource:
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                        - "/*"
                  
Outputs:
  ConfigBucket:
    Description: Bucket for storing config-logs
    Value: !Ref ConfigBucket
    Export:
      Name: !Sub "${AWS::StackName}-ConfigBucket"

  CloudTrailBucket:
    Description: Bucket for storing cloudtrail-logs
    Value: !Ref CloudTrailBucket
    Export:
      Name: !Sub "${AWS::StackName}-CloudTrailBucket"

  AccessLogsBucket:
    Description: Bucket for storing access-logs
    Value: !Ref AccessLogsBucket
    Export:
      Name: !Sub "${AWS::StackName}-AccessLogsBucket"
