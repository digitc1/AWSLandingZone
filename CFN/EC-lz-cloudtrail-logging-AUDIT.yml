AWSTemplateFormatVersion: 2010-09-09

#   --------------------------------------------------------
#   Version History
#
#   
#   v1.0.0  J. Vandenbergen   Initial Version
#   v1.0.1  J. Vandenbergen   Added description and disabled notifications for all changes
#   v1.0.2  J. Vandenbergen   Added configuration for local SNS topics
#   v1.0.3  L. Leonard        Notification allowed from several organizations
#   v1.1.0  J. Silva          Enables optional resource installation (SOC integration)
#   --------------------------------------------------------

Description: >-
  v1.2. Enables CloudTrail logging to S3 buckets in each account

  Prerequisites:

  Mandatory Input:

  Execution:
    - Run in the management account and target the foundation OUs

  Creates in all accounts:
    - Cloudtrail: is multiRegion and logs to cloudwatchlogs and S3

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "S3 Buckets"
        Parameters:
          - CloudTrailBucket
          - ConfigBucket

Parameters:
  KeyDescription:
      Description: 'A brief description of why this key is required'
      Type: String
      Default: 'KMS key for cloudtrail'
  KeyAlias:
      Description: 'A short friendly name for the key'
      Type: String
      Default: 'SECLZ-Cloudtrail-encryption-key'
  FilesRetentionInDays:
      Description: 'Specifies the number of days you want to retain log files in the SLZ S3 buckets.'
      Type: Number
      Default: 60
      AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  CloudTrailInsightsLogsGroupName:
    Type: String
    Description: CloudTrail Insights CloudWatch LogGroup name
    Default: "/aws/cloudtrail/insight"
  CloudTrailLogGroupName:
    Type: String
    Default: '/aws/cloudtrail'
    Description: Cloudtrail CloudWatch LogGroup name
  CloudwatchAlarmsLogGroupName:
    Type: String
    Default: '/aws/events/cloudwatch-alarms'
    Description: AWS CloudWatch Alarms LogGroup name
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain CloudTrail log events in the CloudWatch Logs.'
    Type: Number
    Default: 60
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  FirehoseDestinationArn:
    Type: String
    Default: "arn:aws:logs:eu-west-1:189111522208:destination:CLW-digit-splunk-nonprod-digit-dest"
    Description: The ARN of the firehose stream aggregating the logs in the DIGIT C2 Log Aggregation Central Account

Resources:


  #   -------------------
  #   Create KMS key for Cloudtrail
  #   -------------------

  KMSCloudtrailKey:
    Type: "AWS::KMS::Key"
    Properties:
      Description: !Ref KeyDescription
      Enabled: True
      EnableKeyRotation: True
      KeyPolicy:
        Version: "2012-10-17"
        Id: "key-default-1"
        Statement:
          -
            Sid: "Key-admin-root"
            Effect: "Allow"
            Principal:
              AWS:
                Fn::Join:
                - ""
                - - "arn:aws:iam::"
                  - Ref: AWS::AccountId
                  - ":root"
            Action:
              - "kms:*"
            Resource: "*"
          # -
          #   Sid: "Allow access for Key Administrators"
          #   Effect: "Allow"
          #   Principal:
          #     AWS:
          #       Fn::Join:
          #       - ""
          #       - - "arn:aws:iam::"
          #         - Ref: AWS::AccountId
          #         - ":role/OrganizationAccountAccessRole"
          #   Action:
          #     - "kms:Encrypt"
          #     - "kms:Decrypt"
          #     - "kms:ReEncrypt*"
          #     - "kms:GenerateDataKey*"
          #     - "kms:DescribeKey"
          #     - "kms:Create*"
          #     - "kms:Describe*"
          #     - "kms:Enable*"
          #     - "kms:List*"
          #     - "kms:Put*"
          #     - "kms:Update*"
          #     - "kms:Revoke*"
          #     - "kms:Disable*"
          #     - "kms:Get*"
          #     - "kms:Delete*"
          #     - "kms:TagResource"
          #     - "kms:UntagResource"
          #     - "kms:ScheduleKeyDeletion"
          #     - "kms:CancelKeyDeletion"
          #   Resource: "*"
          - 
            Sid: "Allow use of the key"
            Effect: "Allow"
            Principal:
              AWS:
                # - Fn::Join:
                #   -  ""
                #   - - "arn:aws:iam::"
                #     - Ref: AWS::AccountId
                #     - ":role/OrganizationAccountAccessRole"
                - Fn::Join:
                  -  ""
                  - - "arn:aws:iam::"
                    - Ref: AWS::AccountId
                    - ":role/aws-service-role/organizations.amazonaws.com/AWSServiceRoleForOrganizations"
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: "*"
          - 
            Sid: "Allow CloudTrail to encrypt logs"
            Effect: "Allow"
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: kms:GenerateDataKey*
            Resource: "*"
            Condition: 
              StringLike:
                kms:EncryptionContext:aws:cloudtrail:arn: "arn:aws:cloudtrail:*:*:trail/*"
          - 
            Sid: "Allow CloudTrail to describe key"
            Effect: "Allow"
            Principal:
              Service: cloudtrail.amazonaws.com
            Action:
              - "kms:DescribeKey"
            Resource: "*"
          - 
            Sid: "Allow principals in the account to decrypt log files"
            Effect: "Allow"
            Principal:
              AWS: "*"
            Action:
              - "kms:Decrypt"
              - "kms:ReEncryptFrom"
            Resource: "*"
            Condition: 
              StringEquals:
                kms:CallerAccount: !Ref AWS::AccountId
              StringLike:
                kms:EncryptionContext:aws:cloudtrail:arn:
                  Fn::Join:
                  -  ""
                  - - "arn:aws:cloudtrail:*:"
                    - Ref: AWS::AccountId
                    - ":trail/*"
          - 
            Sid: "Allow alias creation during setup"
            Effect: "Allow"
            Principal:
              AWS: "*"
            Action: kms:CreateAlias
            Resource: "*"
            Condition: 
              StringEquals:
                kms:CallerAccount: !Ref AWS::AccountId
                kms:ViaService: "ec2.eu-west-1.amazonaws.com"

  myKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName:
        Fn::Join:
          - ""
          -
            - "alias/"
            - !Ref KeyAlias
      TargetKeyId:
        Ref: KMSCloudtrailKey


  #   -------------------
  #   AccessLogs Bucket
  #   -------------------

  AccessLogsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketEncryption: 
          ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
        BucketName:
          Fn::Join:
          - ""
          - - "access-logs-"
            - Ref: AWS::AccountId
            - "-do-not-delete"
        OwnershipControls:
          Rules:
          - ObjectOwnership: BucketOwnerEnforced
        LifecycleConfiguration:
            Rules:
              -
                Status: Enabled
                ExpirationInDays: !Ref FilesRetentionInDays
                NoncurrentVersionExpirationInDays: !Ref FilesRetentionInDays

  AccessLogsPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
          Bucket:
              Ref: AccessLogsBucket
          PolicyDocument:
              Statement:
                -
                  Sid: "AWSAccessLogsBucketSSL"
                  Action: "s3:*"
                  Effect: Deny
                  Principal: "*"
                  Resource:
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                        - "/*"
                  Condition:
                    Bool:
                      "aws:SecureTransport": "false"
                -
                  Sid: "S3ServerAccessLogsPolicy"
                  Action: "s3:PutObject"
                  Effect: Allow
                  Principal:
                    Service:
                    - "logging.s3.amazonaws.com"
                  Resource:
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt AccessLogsBucket.Arn
                        - "/*"

  #   -------------------
  #   CloudTrail Bucket
  #   -------------------

  CloudTrailBucket:
      Type: AWS::S3::Bucket
      Properties:
          BucketEncryption: 
            ServerSideEncryptionConfiguration: 
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: 'aws:kms'
                KMSMasterKeyID: !GetAtt 'KMSCloudtrailKey.Arn'
          BucketName:
              Fn::Join:
              - ""
              - - "cloudtrail-logs-"
                - Ref: AWS::AccountId
                - "-do-not-delete"
          OwnershipControls:
            Rules:
            - ObjectOwnership: BucketOwnerEnforced
          LifecycleConfiguration:
              Rules:
                -
                  Status: Enabled
                  ExpirationInDays: !Ref FilesRetentionInDays
                  NoncurrentVersionExpirationInDays: !Ref FilesRetentionInDays
                  Transitions:
                  # -
                  #    TransitionInDays: 60
                  #    StorageClass: GLACIER
                    -
                      TransitionInDays: 30
                      StorageClass: STANDARD_IA

                  NoncurrentVersionTransitions:
                  # -
                  #    TransitionInDays: 60
                  #    StorageClass: GLACIER
                    -
                      TransitionInDays: 30
                      StorageClass: STANDARD_IA

          LoggingConfiguration:
              DestinationBucketName: !Ref AccessLogsBucket
          VersioningConfiguration:
              Status: Enabled

  CloudTrailBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
          Bucket:
              Ref: CloudTrailBucket
          PolicyDocument:
              Statement:
                -
                  Sid: "CloudTrailBucketPolicyDelivery1"
                  Effect: "Allow"
                  Principal:
                    Service:
                    - "cloudtrail.amazonaws.com"
                  Action:
                  - "s3:GetBucketAcl"
                  Resource: !GetAtt CloudTrailBucket.Arn

                -
                  Sid: "CloudTrailBucketPolicyDelivery2"
                  Effect: "Allow"
                  Principal:
                    Service:
                    - "cloudtrail.amazonaws.com"
                  Action:
                  - "s3:PutObject"
                  Resource:
                    Fn::Join:
                      - ""
                      -
                        - !GetAtt CloudTrailBucket.Arn
                        - "/*"
                  Condition:
                    StringEquals:
                      "s3:x-amz-acl": "bucket-owner-full-control"
                -
                  Sid: "AWSCloudTrailgBucketSSL"
                  Action: s3:*
                  Principal: "*"
                  Effect: Deny
                  Resource:
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt CloudTrailBucket.Arn
                    - Fn::Join:
                      - ""
                      -
                        - !GetAtt CloudTrailBucket.Arn
                        - "/*"
                  Condition:
                    Bool:
                      "aws:SecureTransport": "false"


  #   -------------------
  #   Enable CloudTrail
  #   -------------------
  
  CloudTrailLogging:
    Type: "AWS::CloudTrail::Trail"
    DependsOn: CloudTrailBucketPolicy
    Properties:
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      TrailName: 'lz-cloudtrail-logging'
      S3BucketName: !Sub "cloudtrail-logs-${AWS::AccountId}-do-not-delete"
      KMSKeyId: !GetAtt 'KMSCloudtrailKey.Arn'
      IsLogging: true
      InsightSelectors: 
        - InsightType : 'ApiCallRateInsight'
        - InsightType : 'ApiErrorRateInsight'
      EnableLogFileValidation: true
      CloudWatchLogsLogGroupArn: !GetAtt TrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt TrailLogGroupRole.Arn

  TrailLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Ref CloudTrailLogGroupName
      RetentionInDays: !Ref LogsRetentionInDays

  TrailSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref 'FirehoseDestinationArn'
      FilterPattern: ''
      LogGroupName: !Ref 'TrailLogGroup'
      FilterName: !Ref AWS::NoValue


  #   -------------------
  #   Cloudwatch Alarms
  #   -------------------
  CloudwatchAlarmsLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Ref CloudwatchAlarmsLogGroupName
      RetentionInDays: !Ref LogsRetentionInDays

  # Enable cloudwatch Alarms events to be sent to the corresponding loggroup
  CloudwatchAlarmsEventSecLog:
    Type: AWS::Events::Rule
    Properties:
      Name: SECLZ-CloudwatchAlarms-Events
      Description: 'Rule to send Cloudwatch Alarms events to loggroup'
      EventPattern:
        {
          "source": [
            "aws.cloudwatch"
          ],
          "detail-type": [
            "CloudWatch Alarm State Change"
          ]
        }
      State: ENABLED
      Targets:
      - Id: "AwsCloudwatchAlarms-Seclog"
        Arn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudwatchAlarmsLogGroup}"


  #   -------------------
  #   Trail Insights
  #   -------------------
  TrailInsightsLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Ref CloudTrailInsightsLogsGroupName
      RetentionInDays: !Ref LogsRetentionInDays

  TrailInsightsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref 'FirehoseDestinationArn'
      FilterPattern: ''
      LogGroupName: !Ref 'TrailInsightsLogGroup'
      FilterName: !Ref AWS::NoValue

  # Enable Trail Ingisght events to be sent to the corresponding loggroup
  TrailInsightsEventSecLog:
    Type: AWS::Events::Rule
    Properties:
      Name: SECLZ-TrailInsights-Events
      Description: 'Rule to send TrailInsights events to loggroup'
      EventPattern:
        {
          "source": [
            "aws.cloudtrail"
          ],
          "detail-type": [
            "AWS Insight via CloudTrail"
          ]
        }
      State: ENABLED
      Targets:
      - Id: "AwsTrailInsightsCloudWatch-Seclog"
        Arn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${TrailInsightsLogGroup}"


  #   -------------------
  #   Trail and TrailInsight LogGroup Role
  #   -------------------
        
  TrailLogGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AssumeRole1
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: CIS-cloudtrail-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: AWSCloudTrailCreateLogStream
            Effect: Allow
            Action: logs:CreateLogStream
            Resource: !GetAtt TrailLogGroup.Arn
          - Sid: AWSCloudTrailPutLogEvents
            Effect: Allow
            Action: logs:PutLogEvents
            Resource: !GetAtt TrailLogGroup.Arn
          - Sid: AWSCloudTrailInsightsCreateLogStream
            Effect: Allow
            Action: logs:CreateLogStream
            Resource: !GetAtt TrailInsightsLogGroup.Arn
          - Sid: AWSCloudTrailInsightsPutLogEvents
            Effect: Allow
            Action: logs:PutLogEvents
            Resource: !GetAtt TrailInsightsLogGroup.Arn

Outputs: {}
