AWSTemplateFormatVersion: 2010-09-09

#   --------------------------------------------------------
#   Version History
#
#   v1.0.0  J. Vandenbergen   Initial Version
#   v1.1.0  J. Silva          Enables optional resource installation (SOC integration)
#   --------------------------------------------------------

Description: >-
  v1.0. Script to create Guardduty detector

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Guardduty"
        Parameters:
          - GuardDutyMasterId

Parameters:
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain CloudTrail log events in the CloudWatch Logs.'
    Type: Number
    Default: 60
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  AwsGuardDutyGroupName:
    Type: String
    Description: Guardduty CloudWatch LogGroup name
    Default: "/aws/events/guardduty"
  FirehoseDestinationArn:
    Type: String
    Default: "arn:aws:logs:eu-west-1:189111522208:destination:CLW-digit-splunk-nonprod-digit-dest"
    Description: The ARN of the firehose stream aggregating the logs in the DIGIT C2 Log Aggregation Central Account
  SNSNotificationTopic:
    Type: String
    Default: "EC-Landing-Zone-Security-Notification"
    Description: "Local Admin SNS Topic for Landing Zone"

Resources:
  GuardDutyLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName:  !Ref AwsGuardDutyGroupName
      RetentionInDays: !Ref LogsRetentionInDays

  AwsGuardDutySubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref 'FirehoseDestinationArn'
      FilterPattern: ''
      LogGroupName: !Ref 'GuardDutyLogGroup'
      FilterName: !Ref AWS::NoValue

  CloudWatchEventsLogGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SECLZ-CloudWatchEvents-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: logs:CreateLogStream
              Resource:
              - !GetAtt GuardDutyLogGroup.Arn
            - Effect: Allow
              Action: logs:PutLogEvents
              Resource:
              - !GetAtt GuardDutyLogGroup.Arn
            

  # GuardDuty CloudWatch Event - For GuardDuty
  GuardDutyEvents: 
    Type: AWS::Events::Rule
    DependsOn: GuardDutyLogGroup
    Properties: 
      Name: SECLZ-GuardDuty-Event
      RoleArn: 
        Fn::GetAtt: 
        - "CloudWatchEventsLogGroupRole"
        - "Arn"
      Description: "GuardDuty Event Handler"
      EventPattern: 
        source:
        - aws.guardduty
      State: ENABLED
      Targets:
        - 
          Arn: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${SNSNotificationTopic}"         
          Id: "GuardDutySNSTopic-SecLog"
        -
          Arn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${GuardDutyLogGroup}"
          Id: "AwsGuardDutyCloudWatch-Seclog"
 